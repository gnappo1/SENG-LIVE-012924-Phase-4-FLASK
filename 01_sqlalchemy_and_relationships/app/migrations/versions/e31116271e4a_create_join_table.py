"""create join table

Revision ID: e31116271e4a
Revises: 84dfc91f4076
Create Date: 2024-04-01 10:37:32.723641

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e31116271e4a'
down_revision: Union[str, None] = '84dfc91f4076'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('owner_pets',
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('pet_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['owners.id'], name=op.f('fk_owner_pets_owner_id_owners')),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], name=op.f('fk_owner_pets_pet_id_pets')),
    sa.PrimaryKeyConstraint('owner_id', 'pet_id', name=op.f('pk_owner_pets'))
    )
    with op.batch_alter_table('owners', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('phone',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('update_at')

    with op.batch_alter_table('pets', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('species',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('breed',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.drop_constraint('fk_pets_owner_id_owners', type_='foreignkey')
        batch_op.drop_column('update_at')
        batch_op.drop_column('owner_id')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('pets', schema=None) as batch_op:
        batch_op.add_column(sa.Column('owner_id', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('update_at', sa.DATETIME(), nullable=True))
        batch_op.create_foreign_key('fk_pets_owner_id_owners', 'owners', ['owner_id'], ['id'])
        batch_op.alter_column('breed',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('species',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('owners', schema=None) as batch_op:
        batch_op.add_column(sa.Column('update_at', sa.DATETIME(), nullable=True))
        batch_op.alter_column('phone',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.drop_column('updated_at')

    op.drop_table('owner_pets')
    # ### end Alembic commands ###
